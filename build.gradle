plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_loader}-${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	repositories {
		maven {
			url "https://cursemaven.com"
			content {
				includeGroup "curse.maven"
			}
		}

		maven {
			url "https://maven.siphalor.de/"
		}

		maven {
			name = "TerraformersMC"
			url = "https://maven.terraformersmc.com/"
		}
		maven {
			name = 'Ladysnake Mods'
			url = 'https://maven.ladysnake.org/releases'
		}

		//maven { url = "https://jitpack.io" }
		maven { url "https://maven.shedaniel.me/" }

		maven {
			url "https://maven.jamieswhiteshirt.com/libs-release"
			content {
				includeGroup "com.jamieswhiteshirt"
			}
		}

		maven { url 'https://maven.nucleoid.xyz' }
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
		maven { url 'https://api.modrinth.com/maven' }

		maven {
			name 'Gegy'
			url 'https://maven.gegy.dev'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	//include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	//include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
	//modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	modRuntimeOnly("dev.architectury:architectury-fabric:${project.architectury_version}")
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	//include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	//modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	//5207622
	//4989864
	//modImplementation "curse.maven:travelersbackpack-fabric-541171:4989864"
	//modImplementation "curse.maven:trinkets-341284:4657534"
	//modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")

	//modImplementation("dev.emi:trinkets:${trinkets_version}")
	//include "dev.emi:trinkets:${trinkets_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}